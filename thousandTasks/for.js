// 1. Даны целые числа K и N (N > 0). Вывести N раз число K.

let task01 = function(k, n) {
  for (let i = 0; i < n; i++) {
    console.log(k);
  }
};

// 2. Даны два целых числа A и B (A < B). Вывести в порядке возрастания все
//    целые числа, расположенные между A и B ( включая сами числа A и B),
//    а также количество N этих чисел.

let task02 = function(a, b) {
  let c = 0;
  for (let i = a; i <= b; i++) {
    console.log(i);
    c++;
  }
  console.log('N =', b - a + 1);
};

// 3. Даны два целых числа A и B (A < B). Вывести в порядке убывания все
//    целые числа, расположенные между A и B (не включая числа A и B), а также
//    количество N этих чисел.

let task03 = function(a, b) {
  for (let i = a + 1; i < b; i++) {
    console.log(i);
  }
  console.log('N =', b - a - 1);
};

// 4. Дано вещественное число — цена 1 кг конфет. Вывести стоимость
//    1, 2, …, 10 кг конфет.

let task04 = function(n) {
  for (let i = 1; i <= 10; i++) {
    console.log( n * i );
  }
};

// 5. Дано вещественное число — цена 1 кг конфет. Вывести стоимость
//      0.1, 0.2, …, 1 кг конфет.

let task05 = function(n) {
  for (let i = 1; i <= 10; i++) {
    console.log( n * i / 10 );
  }
};

// 6. Дано вещественное число — цена 1 кг конфет. Вывести стоимость
//    1.2, 1.4, …, 2 кг конфет.

let task06 = function(n) {
  for (let i = 1; i <= 5; i++) {
    console.log( n * i / 5 + n );
  }
};

// 7. Даны два целых числа A и B (A < B). Найти сумму всех целых чисел
//    от A до B включительно.

let task07 = function(a, b) {
  let sum = 0;
  for(let i = a; i <= b; i++) {
    sum += i;
  }
  console.log( sum );
};

// 8. Даны два целых числа A и B (A < B). Найти произведение всех целых
//    чисел от A до B включительно.

let task08 = function(a, b) {
  let multiplication = 1;
  for (let i = a; i <= b; i++) {
    multiplication *= i;
  }
  console.log( multiplication );
};

// 9. Даны два целых числа A и B (A < B). Найти сумму квадратов всех
//    целых чисел от A до B включительно.

let task09 = function(a, b) {
  let sum = 0;
  for (let i = a; i <= b; i++) {
    sum += i ** 2;
  }
  console.log( sum );
};

// 10. Дано целое число N (> 0). Найти сумму 1 + 1/2 + 1/3 + … + 1/N
//     (вещественное число).

let task10 = function(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += 1 / i;
  }
  console.log( Math.floor(sum * 100) / 100 );
};

// 11. Дано целое число N (> 0). Найти сумму
//     N^2 + (N + 1)^2 + (N + 2)^2 + … + (2·N)^2 (целое число).

let task11 = function(n) {
  let sum = 0;
  for (let i = 0; i <= n; i++) {
    sum += (n + i) ** 2;
  }
  console.log( sum );
};

// 12. Дано целое число N (> 0). Найти произведение
//     1.1 · 1.2 · 1.3 · … (N сомножителей).

let task12 = function(n) {
  let multiplication = 1;
  for (let i = 1; i <= n; i++) {
    multiplication *= 1 + i / 10;
  }
  console.log( Math.floor(multiplication * 1000) / 1000 );
};

// 13. Дано целое число N (> 0). Найти значение выражения
//     1.1 – 1.2 + 1.3 –… (N слагаемых, знаки чередуются).
//     Условный оператор не использовать.

let task13 = function(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += i % 2 === 1 ? 1 + i / 10 : -(1 + i / 10);
  }
  console.log( Math.floor(sum * 1000) / 1000 );
};

// 14. Дано целое число N (> 0). Найти квадрат данного числа, используя
//     для его вычисления следующую формулу: N^2 = 1 + 3 + 5 + … + (2·N – 1).
//     После добавления к сумме каждого слагаемого выводить текущее значение
//     суммы ( в результате будут выведены квадраты всех целых
//     чисел от 1 до N).

let task14 = function(n) {
  let sum = 0;
  for (let i = 1; i <= n * 2; i += 2) {
    console.log( sum += i);
  }
};

// 15. Дано вещественное число A и целое число N (> 0). Найти A
//     в степени N: AN = A·A· … ·A (числа A перемножаются N раз).

let task15 = function(a, n) {
  let multiplication = a;
  for (let i = 1; i < n; i++) {
    multiplication *= a;
  }
  console.log( multiplication );
};

// 16. Дано вещественное число A и целое число N (> 0). Используя
//     один цикл, вывести все целые степени числа A от 1 до N.

let task16 = function(a, n) {
  let multiplication = 1;
  for (let i = 1; i <= n; i++) {
    console.log( a + ' в степени ' + i + ' = ', multiplication *= a );
  }
};

// 17. Дано вещественное число A и целое число N (> 0). Используя один цикл,
// найти сумму 1 + A + A^2 + A^3 + … + A^N.

let task17 = function(a, n) {
  let sum = 1;
  for (let i = 1; i <= n; i++) {
    sum += a ** i;
  }
  console.log( sum );
};

// 18. Дано вещественное число A и целое число N (> 0). Используя один цикл,
//     найти значение выражения 1 – A + A^2 – A^3 + … + (–1)^N·A^N. Условный
//     оператор не использовать.

let task18 = function(a, n) {
  let sum = 1;
  for (let i = 1; i <= n; i++) {
    sum += i % 2 === 1 ? -(a ** i) : a ** i;
  }
  console.log( sum );
};

// 19. Дано целое число N (> 0). Найти произведение N! = 1·2·…·N
//      (N–факториал).

let task19 = function(n) {
  let factorial = 1;
  for (let i = 2; i <= n; i++) {
    factorial *= i;
  }
  console.log( factorial );
};

// 20. Дано целое число N (> 0). Используя один цикл, найти сумму
//     1! + 2! + 3! +… + N! (выражение N! — N–факториал — обозначает
//     произведение всех целых чисел от 1 до N: N! = 1·2·…· N).

let task20 = function(n) {
  let factorial = 1;
  let sum = factorial;
  for (let i = 2; i <= n; i++) {
    factorial *= i;
    sum += factorial;
  }
  console.log( sum );
};

// 21. Дано целое число N (> 0). Используя один цикл, найти сумму
//     1 + 1/(1!) + 1/(2!) + 1/(3!) +… + 1/(N!) (выражение N! — N–факториал —
//     обозначает произведение всех целых чисел от 1 до N: N! = 1·2·…· N).
//     Полученное число является приближенным значением константы e = exp(1).

let task21 = function(n) {
  let factorial = 1;
  let sum = factorial;
  for (let i = 1; i <= n; i++) {
    factorial *= i;
    sum += 1 / factorial;
  }
  console.log( sum );
};

// 22. Дано вещественное число X и целое число N (> 0). Найти значение
//     выражения 1 + X + X^2/(2!) + … + X^N/(N!) (N! = 1·2·…· N). Полученное
//     число является приближенным значением функции exp в точке X.

let task22 = function(x, n) {
  let factorial = 1;
  let sum = factorial;
  for (let i = 1; i <= n; i++) {
    factorial *= i;
    sum += x ** i / factorial;
  }
  console.log( sum );
};

// 23. Дано вещественное число X и целое число N (> 0). Найти значение
//     выражения X – X^3/(3!) + X^5/(5!) –… + (–1)N·X^2·N+1/((2·N+1)!)
//     (N! = 1·2·…· N). Полученное число является приближенным значением
//     функции sin в точке X.

let task23 = function(x, n) {
  let factorial = 1;
  let sum = 0;
  let plus = 1;
  for (let i = 1; i <= n; i++) {
    factorial *= i;
    if (i % 2 === 1) {
      sum += x ** i / factorial * plus;
      plus = -plus;
    }
  }
  console.log( sum );
};

// 24. Дано вещественное число X и целое число N (> 0). Найти значение
//     выражения 1 – X^2/(2!) + X^4/(4!) –… + (–1)N·X^2·N/((2·N)!)
//     (N! = 1·2·…· N). Полученное число является приближенным значением
//     функции cos в точке X.

let task24 = function(x, n) {
  let factorial = 1;
  let sum = 1;
  let plus = -1;
  for (let i = 1; i <= n; i++) {
    factorial *= i;
    if (i % 2 === 0) {
      sum += x ** i / factorial * plus;
      plus = -plus;
    }
  }
  console.log( sum );
};

// 25. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти
//     значение выражения X – X^2/2 + X^3/3 – … + (–1)N–1·X^N/N. Полученное
//     число является приближенным значением функции ln в точке 1 + X.

let task25 = function(x, n) {
  let sum = x;
  for (let i = 2; i <= n; i++) {
    console.log( sum );
    sum += i % 2 === 0 ? -(x ** i / i) : x ** i / i;
  }
  console.log( sum );
};

// 26. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти
//     значение выражения X – X^3/3 + X^5/5 – … + (–1)N·X^2·N+1/(2·N+1).
//     Полученное число является приближенным значением функции
//     arctg в точке X.

let task26 = function(x, n) {
  let sum = x;
  let plus = -1;
  for (let i = 3; i <= n; i += 2) {
    sum += x ** i / i * plus;
    plus = -plus;
  }
  console.log( sum );
};

// 27. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти
//     значение выражения X + 1·X^3/(2·3) + 1·3·X^5/(2·4·5) +… +
//     + 1·3·…·(2·N–1)·X^2·N+1/(2·4·…·(2·N)·(2·N+1)). Полученное число является
//     приближенным значением функции arcsin в точке X.

let task27 = function(x, n) {
  let sum = x;
  let x2 = x ** 2;
  let firstTerm = x;
  for (let i = 2; i <= n; i++) {
    firstTerm *= x2 * (2 * i - 3) / (2 * i - 2);
    sum += firstTerm / (2 * i - 1);
  }
  console.log( sum );
};

// 28. Дано вещественное число X (|X| < 1) и целое число N (> 0). Найти
//     значение выражения 1 + X/2 – 1·X^2/(2·4) + 1·3·X^3/(2·4·6) – … +
//     + (–1)^N–1·1·3·…·(2·N–3)·X^N/(2·4·…·(2·N)). Полученное число является
//     приближенным значением функции 1.+ X

let task28 = function(x, n) {
  let sum = 1;
  let firstTerm = 1;
  for (let i = 1; i <= n; i++) {
    firstTerm = -firstTerm * x * (2 * i - 3) / (2 * i);
    sum += firstTerm;
  }
  console.log( sum );
};

// 29. Дано целое число N (> 1) и две вещественные точки на числовой оси:
//     A, B (A < B). Отрезок [A, B] разбит на N равных отрезков. Вывести
//     H—длину каждого отрезка, а также набор точек
//     A, A + H, A + 2·H, A + 3·H, …, B, образующий разбиение отрезка [A, B].

let task29 = function(a, b, n) {
  let h = (b - a) / n;
  console.log('H =', h);
  for (let i = 0; i <= n; i++) {
    console.log( 'A' + i, '=', a + h * i );
  }
};

// 30. Дано целое число N (> 1) и две вещественные точки на числовой оси:
//     A, B (A < B). Отрезок [A, B] разбит на N равных отрезков. Вывести
//     H—длину каждого отрезка, а также значения функции F(X) = 1 – sin( X)
//     в точках, разбивающих отрезок [A, B]:
//     F(A), F(A + H), F(A + 2·H), …, F(B).

let task30 = function(a, b, n) {
  let h = b - a / n;
  console.log('H =', h);
  for (let i = 0; i <= n; i++) {
    let f = 1 - Math.sin(a + h * i);
    console.log( 'A' + i, '=', f );
  }
};

// 31. Дано целое число N (> 0). Последовательность вещественных чисел AK
//     определяется следующим образом: A0 = 2, AK = 2 + 1/AK–1, K = 1, 2,… .
//     Вывести элементы A1, A2, …, AN.

let task31 = function(n) {
  let aK = 2;
  for (let i = 1; i <= n; i++) {
    aK = 2 + 1 / aK;
    console.log('A' + i, '=', aK);
  }
};

// 32. Дано целое число N (> 0). Последовательность вещественных чисел AK
//     определяется следующим образом: A0 = 1, AK = (AK–1 + 1)/K, K = 1, 2,… .
//     Вывести элементы A1, A2, …, AN.

let task32 = function(n) {
  let aK = 1;
  for (let i = 1; i <= n; i++) {
    aK = (aK + 1) / i;
    console.log('A' + i, '=', aK);
  }
};

// 33. Дано целое число N (> 1). Последовательность чисел Фибоначчи FK
//     (целого типа) определяется следующим образом:
//     F1 = 1, F2 = 1, FK = FK–2 + FK–1, K = 3, 4,… .
//     Вывести элементы F1, F2, …, FN.

let task33 = function(n) {
  let f1 = 1;
  let f2 = 1;
  console.log('F1 =', f1);
  console.log('F2 =', f2);
  for (let i = 3; i <= n; i++) {
    let tmp = f2;
    f2 = f1 + f2;
    f1 = tmp;
    console.log('F' + i, '=', f2);
  }
};

// 34. Дано целое число N (> 1). Последовательность вещественных чисел AK
//     определяется следующим образом:
//     A1 = 1, A2 = 2, AK = (AK–2 + 2·AK–1)/3, K = 3, 4, … .
//     Вывести элементы A1, A2, …, AN.

let task34 = function(n) {
  let a1 = 1;
  let a2 = 2;
  console.log('A1 =', a1);
  console.log('A2 =', a2);
  for (let i = 3; i <= n; i++) {
    let tmp = a2;
    a2 = (a1 + 2 * a2) / 3;
    a1 = tmp;
    console.log('A' + i, '=', a2);
  }
};

// 35. Дано целое число N (> 2). Последовательность целых чисел AK
//     определяется следующим образом:
//     A1 = 1, A2 = 2, A3 = 3, AK = AK–1 + AK–2 – 2·AK–3, K = 4, 5,… .
//     Вывести элементы A1, A2, …, AN.

let task35 = function(n) {
  let a1 = 1;
  let a2 = 2;
  let a3 = 3;
  console.log('A1 =', a1, 'A1 =', a2, 'A1 =', a3, );
  for (let i = 4; i <= n; i++) {
    let tmp = a3;
    a3 = a3 + a2 - 2 * a1;
    a1 = a2;
    a2 = tmp;
    console.log('A' + i, '=', a3);
  }
};

// Вложенные циклы
// 36. Даны целые положительные числа N и K. Найти сумму 1^K + 2^K + … + N^K.
//     Чтобы избежать целочисленного переполнения, вычислять слагаемые этой
//     суммы с помощью вещественной переменной и выводить результат как
//     вещественное число.

let task36 = function(n, k) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    let nK = 1;
    for (let j = 1; j <= k; j++) {
      nK *= i;
    }
    sum += nK;
  }
  console.log(sum);
};

// 37. Дано целое число N (> 0). Найти сумму 1^1 + 2^2 + … + N^N. Чтобы
//     избежать целочисленного переполнения, вычислять слагаемые этой суммы
//     с помощью вещественной переменной и выводить результат как
//     вещественное число.

let task37 = function(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    let nN = 1;
    for (let j = 1; j <= i; j++) {
      nN *= i;
    }
    sum += nN;
  }
  console.log(sum);
};

// 38. Дано целое число N (> 0). Найти сумму 1^N + 2^N–1 + … + N^1. Чтобы
//     избежать целочисленного переполнения, вычислять слагаемые этой суммы
//     с помощью вещественной переменной и выводить результат как
//     вещественное число.

let task38 = function(n) {
  let sum = 0;
  for (let i = 0; i < n; i++) {
    let nN = 1;
    for (let j = n - i; j >= 1; j--) {
      nN *= i + 1;
    }
    sum += nN;
  }
  console.log( sum );
};

// 39. Даны целые положительные числа A и B ( A < B). Вывести все целые
//     числа от A до B включительно; при этом каждое число должно выводиться
//     столько раз, каково его значение (например, число 3 выводится 3 раза).

let task39 = function(a, b) {
  for (let i = a; i <= b; i++) {
    for (let j = 0; j < i; j++) {
      console.log(i);
    }
  }
};

// 40. Даны целые числа A и B (A < B). Вывести все целые числа от A до B
//     включительно; при этом число A должно выводиться 1 раз, число A + 1
//     должно выводиться 2 раза и т. д.

let task40 = function(a, b) {
  for (let i = 1; i <= b - a + 1; i++) {
    for (let j = 0; j < i; j++) {
      console.log(a + i - 1);
    }
  }
};
